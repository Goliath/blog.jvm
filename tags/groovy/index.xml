<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Groovy on Bitecode blog</title><link>https://bitecodeblog.codeappeal.com/tags/groovy/</link><description>Recent content in Groovy on Bitecode blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 05 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://bitecodeblog.codeappeal.com/tags/groovy/index.xml" rel="self" type="application/rss+xml"/><item><title>Serialization exploits in JVM</title><link>https://bitecodeblog.codeappeal.com/2024/04/05/jvm-serialization-exploits/</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://bitecodeblog.codeappeal.com/2024/04/05/jvm-serialization-exploits/</guid><description>Intro The Java Virtual Machine (JVM) provides a mechanism for persisting Java objects, known as serialization. While introducing it was a great step forward, as developers stopped reinventing the wheel and write the same (still complex) bolierplate code. As we later learned it also opened a pandora box. I will try to describe the problem in below article.
Problem This process of serialization involves converting the state of an object into a byte stream, which can then be reverted back into a copy of the object.</description></item><item><title>Between null and positive infinity</title><link>https://bitecodeblog.codeappeal.com/2016/08/19/groovy-compare-null/</link><pubDate>Fri, 19 Aug 2016 00:00:00 +0000</pubDate><guid>https://bitecodeblog.codeappeal.com/2016/08/19/groovy-compare-null/</guid><description>Problem I happen to create a construction like this:
if(object?.value &amp;gt; 0) { println &amp;#34;do something&amp;#34; } else { println &amp;#34;do nothing&amp;#34; } Are you sure what will be printed when object is null? I must say I wasnâ€™t.
We got used to negate null in groovy like this:
assert !null == true but what about using null with relation operator?
Comparing null Let us review below code:
assert null &amp;lt; 0 assert null &amp;lt; Integer.</description></item></channel></rss>