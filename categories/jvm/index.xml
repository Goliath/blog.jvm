<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JVM on Bitecode blog</title><link>https://bitecode.blog/categories/jvm/</link><description>Recent content in JVM on Bitecode blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 10 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://bitecode.blog/categories/jvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Tweaking the stack for fun and profit</title><link>https://bitecode.blog/2024/05/10/tweaking-stack-for-fun-and-profit/</link><pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate><guid>https://bitecode.blog/2024/05/10/tweaking-stack-for-fun-and-profit/</guid><description>Stackoverflow we&amp;rsquo;ve all been there&amp;hellip; :)
JVM will throw StackoverflowException when it detects that the thread stack memory space is full. This is similar situation we encounter when we run out of heap memory and get OutOfMemoryException. Most of the time, we&amp;rsquo;re experiencing stackoverflow exception when thread in the JVM application has too long call chain. That can result in eating up all stack memory by stack frames. JVM has safe defaults for stack memory region and usually it&amp;rsquo;s around 1MB.</description></item><item><title>Remote JVM debugging</title><link>https://bitecode.blog/2024/04/23/remote-debugging-on-kubernates/</link><pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate><guid>https://bitecode.blog/2024/04/23/remote-debugging-on-kubernates/</guid><description>Scenario Debugging applications in a local environment is straightforward, but what happens when your application is running in a Kubernetes cluster? Sometimes the best place to debug an issue is the remote instance itself. This article will guide you through the process of remotely debugging your Java applications running in Kubernetes.
Prerequisites In this very short post I assume you have:
a Java application running in a Kubernetes cluster IntelliJ IDEA kubectl command-line tool installed and configured Step 1: Start Your Java Application in Debug Mode First, you need to ensure your Java application is running in debug mode.</description></item><item><title>Introduction to Java ergonomics</title><link>https://bitecode.blog/2024/04/20/java-ergonomics-basics/</link><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid>https://bitecode.blog/2024/04/20/java-ergonomics-basics/</guid><description>Intro It&amp;rsquo;s not a secret that JVM is an extremly complex execution environment. It has many options that can be set to tune the application execution. What happens if we don&amp;rsquo;t set any of them or we pick only few? In this article I will explain what is Java ergonomics and how it works to supply default JVM options. I will also tell why it&amp;rsquo;s never safe to rely on the defaults.</description></item></channel></rss>